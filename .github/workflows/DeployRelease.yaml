name: Deploy Release

on:
  release:
    types: [published]

# TODO: Check if hotfix is in the tag name
# Get the target branch from there
jobs:
  deploy:
    name: Deploy new release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Validate release tag 
        id: validate-release-tag
        run: |
          echo "Validating release tag: ${{ github.event.release.tag_name }}..."
          TAG_REGEX='^v([0-9]+\.){2}(\*|[0-9]+)(-.*)?$'
          if [[ ! ${{ github.event.release.tag_name }} =~ $TAG_REGEX ]]; then
            echo "Invalid tag name: ${{ github.event.release.tag_name }}"
            exit 1
          else
            echo "Tag ${{ github.event.release.tag_name }} validated successfully!"
          fi

      - name: Get commit SHA for release
        id: get-commit-sha
        run: echo "sha=sha-$(git rev-parse --short=7 HEAD~)" >> $GITHUB_OUTPUT

      - name: Get target branch
        id: get-target-branch
        if: contains(github.event.release.name, '[hotfix-')
        run: echo "target-branch=$(echo ${{ github.event.release.name }} | cut -d'-' -f2 | sed 's/]//')" >> $GITHUB_OUTPUT

      - name: Print output
        run: |
          echo "### We are printing outputs here! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "## Target Branch" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.get-target-branch.outputs.target-branch}}
          echo "## SHA we are targeting" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.get-commit-sha.outputs.sha}}

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Yarn install
        run: yarn install --frozen-lockfile
      
      - name: Docker Release
        uses: mansagroup/nrwl-nx-action@v3
        with:
          targets: docker-release
          all: 'true'
          parallel: 3

      